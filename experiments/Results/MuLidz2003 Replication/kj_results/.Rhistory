# A bar graph
se <-ggplot(data=e, aes(x=as.factor(scope), y=p,fill=as.factor(scope))) +
geom_bar(stat="identity") +                        # Thinner lines
scale_fill_manual(values=c("limegreen", "seagreen3","royalblue1"))+      # Set legend title
xlab("") + ylab("probability of endorsing\nambiguous utterance\n") + # Set axis labels
scale_y_continuous(limits=c(.2,1),oob = rescale_none)+
theme_bw()+
theme(text = element_text(size=26))+
guides(fill=FALSE)
se
ggsave("super_end.jpeg",width=6,height=4.4)
help()
help(pnorm)
help.search('student')
> 1 + 2
1+2
3 * 4
now = 2010
now
nwords = c(3510,3508,3468,3520,3516,3525,
3505,3519,3558,3487)
nwords = c(3510,3508,3468,3520,3516,3525,
3505,3519,3558,3487)
nwords
nwords[4]
nwords2 = 2 * nwords
nwords2
log(nwords2)
log(10)
log(e)
log(exp(1))
log(10,10)
log(10,5)
log(10,0)
log(0)
help(log)
log(0,10)
min(nwords)
length(nwords)
range(nwords)
summary(nwords)
help.search('anova')
shapiro.test(nwords)
x = 20
m = 10
s = 5
t = x - m
z = t/s
z
log(2.7)
log(2.7,2)
ls()
help(rm)
rm(t)
rm(z)
ls()
n = length(nwords)
n
std = sd(nwrods)
std = sd(nwords)
help.search('square root')
help.search("square root")
std/sqrt(n)
u = mean(nwords)
u
znwords = (nwords - u)/std
znwords
mean(znwords)
sd(znwords)
seats = c(36,35,8,71)
help(sort)
sort(seats, decreasing = TRUE)
percent = seats/150
percent
wdiff = c(6,8,6,5,7,5,9,7,10,9)
wdiff
new.counts = nwords - wdiff
new.counts
nwords2
mean(nwords2)
mean(nwords2) - mean(nwords)
mean(new.counts)
nwords = nwords2
nwords = nwords - wdiff
mean(nwords2) - mean(nwords)
mean(wdiff)
words.f <- c(17667, 15347, 14401, 5037, 20845,
11211, 6008, 17140, 13284, 10930)
words.m <- c(5599, 19776, 13961, 10144, 6107,
16776, 31955, 21140, 5482, 2152)
words <- c(words.f, words.m)
age <- c(24, 31, 28, 21, 29, 29, 25, 32, 30, 31,
33, 26, 22, 24, 23, 23, 20, 21, 29, 27)
words.f
words.f[2]
words.f(2)
words.f[4]
words
mad(words)
mean(words)
max(words)
max(words) - mean(words)
sd(words)
stem(words)
hist(words)
boxplot(words.f, words.m)
boxplot(words.f)
help("boxplot")
boxplot(words.f)
help(boxplot)
all.words = data.frame(words.f,words.m)
all.words
boxplot(all.words)
clc
clear
boxplot(all.words)
cor(words,age)
plot(words,age)
plot(words,age)
plot(words, age)
words.f <- c(17667, 15347, 14401, 5037, 20845,
11211, 6008, 17140, 13284, 10930)
words.m <- c(5599, 19776, 13961, 10144, 6107,
16776, 31955, 21140, 5482, 2152)
words <- c(words.f, words.m)
age <- c(24, 31, 28, 21, 29, 29, 25, 32, 30, 31,
33, 26, 22, 24, 23, 23, 20, 21, 29, 27)
plot(words,age)
words
age
length(age)
length(words)
plot(words,age)
plot(age,words)
lm(age ~ words)
lm(words ~ age)
abline(lm(words ~ age))
plot(words.f, words.m)
length(words)
SE = sd(words)/sqrt(20)
SE
u = mean(words)
CILower = u - (2 * SE)
CILower
CIHigher = u + (2 * SE)
CI = c(CILower, CIHigher)
CI
qnorm(words,19)
qnorm(words)
help(qnorm)
mean(words) + qnorm(.025) * SE
mean(words) + qt(c(.025,.975), df = 19) * SE
t.test(words, mu=16000)
t.test(words.f,mu=20000)
t.test(words.f,words.m)
t.test(words.f,mean(words.m))
t.test(words.f,mu=mean(words.m))
t.test(words.f,words.m,alternative=)
t.test(words.f,words.m,alternative='greater')
mlu = data.frame(
age=seq(25,48),
chi=c(1.46, 1.41, 1.66, 1.74, 1.90, 1.91, 1.85, 2.06,
2.27, 2.43, 2.70, 2.81, 2.69, 2.72, 2.64, 3.05,
3.22, 3.42, 3.70, 3.90, 3.57, 3.49, 3.66, 3.64),
mot=c(5.42, 5.69, 6.27, 6.10, 6.06, 5.98, 6.10, 6.09,
6.10, 6.14, 6.42, 6.35, 6.21, 6.07, 5.84, 6.17,
5.74, 6.11, 6.41, 5.50, 6.00, 6.90, 6.65, 6.40)
data.frame
data.frame
mlu
mlu.mot
rm(list = ls())
mlu = data.frame(
age=seq(25,48),
chi=c(1.46, 1.41, 1.66, 1.74, 1.90, 1.91, 1.85, 2.06,
2.27, 2.43, 2.70, 2.81, 2.69, 2.72, 2.64, 3.05,
3.22, 3.42, 3.70, 3.90, 3.57, 3.49, 3.66, 3.64),
mot=c(5.42, 5.69, 6.27, 6.10, 6.06, 5.98, 6.10, 6.09,
6.10, 6.14, 6.42, 6.35, 6.21, 6.07, 5.84, 6.17,
5.74, 6.11, 6.41, 5.50, 6.00, 6.90, 6.65, 6.40)
mlu = data.frame(
age=seq(25,48),
chi=c(1.46, 1.41, 1.66, 1.74, 1.90, 1.91, 1.85, 2.06,
2.27, 2.43, 2.70, 2.81, 2.69, 2.72, 2.64, 3.05,
3.22, 3.42, 3.70, 3.90, 3.57, 3.49, 3.66, 3.64),
mot=c(5.42, 5.69, 6.27, 6.10, 6.06, 5.98, 6.10, 6.09,
6.10, 6.14, 6.42, 6.35, 6.21, 6.07, 5.84, 6.17,
5.74, 6.11, 6.41, 5.50, 6.00, 6.90, 6.65, 6.40))
mlu = data.frame(
age=seq(25,48),
chi=c(1.46, 1.41, 1.66, 1.74, 1.90, 1.91, 1.85, 2.06,
2.27, 2.43, 2.70, 2.81, 2.69, 2.72, 2.64, 3.05,
3.22, 3.42, 3.70, 3.90, 3.57, 3.49, 3.66, 3.64),
mot=c(5.42, 5.69, 6.27, 6.10, 6.06, 5.98, 6.10, 6.09,
6.10, 6.14, 6.42, 6.35, 6.21, 6.07, 5.84, 6.17,
5.74, 6.11, 6.41, 5.50, 6.00, 6.90, 6.65, 6.40)
)
mlu
mlu = data.frame(
age=seq(25,47),
chi=c(1.46, 1.41, 1.66, 1.74, 1.90, 1.91, 1.85, 2.06,
2.27, 2.43, 2.70, 2.81, 2.69, 2.72, 2.64, 3.05,
3.22, 3.42, 3.70, 3.90, 3.57, 3.49, 3.66, 3.64),
mot=c(5.42, 5.69, 6.27, 6.10, 6.06, 5.98, 6.10, 6.09,
6.10, 6.14, 6.42, 6.35, 6.21, 6.07, 5.84, 6.17,
5.74, 6.11, 6.41, 5.50, 6.00, 6.90, 6.65, 6.40)
)
mlu = data.frame(
age=seq(25,48),
chi=c(1.46, 1.41, 1.66, 1.74, 1.90, 1.91, 1.85, 2.06,
2.27, 2.43, 2.70, 2.81, 2.69, 2.72, 2.64, 3.05,
3.22, 3.42, 3.70, 3.90, 3.57, 3.49, 3.66, 3.64),
mot=c(5.42, 5.69, 6.27, 6.10, 6.06, 5.98, 6.10, 6.09,
6.10, 6.14, 6.42, 6.35, 6.21, 6.07, 5.84, 6.17,
5.74, 6.11, 6.41, 5.50, 6.00, 6.90, 6.65, 6.40)
)
mlu.mot
mlu
mot
mlu$mot
mlu[1,]
mlu[,1]
mlu
plot(mlu$mot,mlu$chi)
abline(0,1)
abline(1.3,1)
abline(1.3,.5)
abline(1.3,.3)
abline(.5,.2)
abline(.5,.8)
abline(.5,.6)
plot(mlu$mot,mlu$chi)
abline(1,.4, col="red", lwd=2)
lm(mlu$chi ~ mlu$mot)
abline(-2.541,.85)
m = lm(mlu$chi ~ mlu$mot)
summary(m)
cor(mlu$mot,mlu$chi)
cor(mlu$mot,mlu$chi)2
cor(mlu$chi,mlu$mot)
/2
lm(mlu$chi ~ mlu$mot)
cor(mlu$mot, mlu$chi)
[1]/2
ans/2
cor(mlu$mot, mlu$chi)/2
cor(mlu$mot, mlu$chi)2
cor(mlu$mot, mlu$chi)^2
resid(lm(mlu$mot ~ mlu$chi))
hit(resid(lm(mlu$mot ~ mlu$chi)))
hit(resid(lm(mlu$mot ~ mlu$chi)))
hist(resid(lm(mlu$mot ~ mlu$chi)))
qqnorm(resid(lm(mlu$mot ~ mlu$chi)))
qqline(resid(lm(mlu$mot ~ mlu$chi)))
plot(mlu$age,mlu$chi)
abline(lm(mlu$chi ~mlu$age))
summary(lm(mlu$chi ~ mlu$age))
hist(resid(lm(mlu$chi ~ mlu$age)))
qqnorm(resid(lm(mlu$chi ~ mlu$age)))
qqline(resid(lm(mlu$chi ~ mlu$age)))
plot(age~chi, data=mlu)
plot(chi~age, data=mlu)
plot(mlu$chi ~ mlu$age)
##setwd("~/Documents/kids-scope/")
##setwd("~/Documents/MATLAB/kids-scope/kids-scope/models/Matlab Model/RSA-Code/Data")
library(ggplot2)
library(scales)
age <- c(24, 31, 28, 21, 29, 29, 25, 32, 30, 31,
33, 26, 22, 24, 23, 23, 20, 21, 29, 27)
words.f <- c(17667, 15347, 14401, 5037, 20845,
11211, 6008, 17140, 13284, 10930)
words.m <- c(5599, 19776, 13961, 10144, 6107,
16776, 31955, 21140, 5482, 2152)
words <- c(words.f, words.m)
age <- c(24, 31, 28, 21, 29, 29, 25, 32, 30, 31,
33, 26, 22, 24, 23, 23, 20, 21, 29, 27)
words.f
talk = data.frame(
words,
age
)
talk
talk$gender = factor(c(rep('F', 10), rep('M', 10)))
talk
mlu.ses = read.csv('http://coltekin.net/cagri/R/data/mlu-ses.csv')
mlu.ses
mlu.ses$ses <- factor(
mlu.ses$ses, levels=c('low', 'medium', 'high'))
mlu.ses
str(mlu.ses)
str(talk)
mlu.ses$subject = factor(mlu.ses$subject, levels = c(1:60))
str(mlu.ses)
mlu.ses
mlu.ses$subject = factor(mlu.ses$subject)
str(mlu.ses)
mlu.ses
mlu.ses[mlu.ses$mlu > 4 & mlu.ses$ses == 'high',]
mlu.ses[mlu.ses$gener == 'male',]
mlu.ses[mlu.ses$gener == 'male']
mlu.ses[mlu.ses$gender == 'male']
mlu.ses[mlu.ses$gender == 'male',]
t.test(talk$words ~ talk$gender, alternative = 'greater')
hist(talk$gender[talk$gender == 'male'])
hist(talk$gender[talk$gender == 'male'])
hist(talk$gender[talk$gender == 'male',])
talk$gender[talk$gender == 'male',]
talk
talk$words[talk$gender == 'M',]
talk[talk$gender == 'M',]
talk$words
talk$words[talk$gender == 'M']
hist(talk$words[talk$gender == 'M'])
hist(talk$words[talk$gender == 'F'])
qqnorm(talk$words[talk$gender == ’F’])
talk = data.frame(
words,
age
)
talk$gender = factor(c(rep('F', 10), rep('M', 10)))
qqnorm(talk$words[talk$gender == 'F'])
qqline(talk$words[talk$gender == 'F'])
qqnorm(talk$words[talk$gender == 'M'])
qqline(talk$words[talk$gender == 'M'])
shapiro.test(talk$words[talk$gender == 'F'])
t.test(words~gender, data=talk, var.equal=T,alternative='greater')
#4.9
boxplot(words ~ gender, data=talk)
#4.11
wilcox.test(words ~ gender, data=talk, alternative='greater')
mlu.ses = read.csv('http://coltekin.net/cagri/R/data/mlu-ses.csv')
mlu.ses$ses <- factor(
mlu.ses$ses, levels=c('low', 'medium', 'high'))
mlu.ses$subject = factor(mlu.ses$subject)
mlu.ses
help(factor)
str(mlu.ses)
boxplot(mlu ~ ses, data=mlu.ses)
summary.aov(lm(mlu~ses, data=mlu.ses))
help(lm)
mlu.ses$medium
mlu.ses
mlu.ses$high
mlu.ses$femail
mlu.ses$female
mlu.ses(ses = 'medium')
mlu.ses[mlu.ses = 'medium']
mlu.ses[mlu.ses == 'medium']
mlu.ses$mlu
mlu.ses$mlu[mlu.ses == 'medium']
talk
mlu.ses$mlu[mlu.ses$ses == 'medium']
mlu.med = mlu.ses$mlu[mlu.ses$ses == ]
mlu.med = mlu.ses$mlu[mlu.ses$ses == 'medium']
mlu.med
mlu.low = mlu.ses$mlu[mlu.ses$ses == 'low']
mlu.low
help(ttest)
help(t.test)
#4.14
summary.aov(lm(words ~ gender, data=talk))
pairwise.t.test(mlu.ses$mlu, mlu.ses$ses, p.adjust.method=’bonf’)
#4.15
pairwise.t.test(mlu.ses$mlu, mlu.ses$ses)
pairwise.t.test(mlu.ses$mlu, mlu.ses$ses, p.adjust.method='bonf')
#4.16
summary.aov(lm(mlu ~ ses + gender, data=mlu.ses))
#4.17
summary.aov(lm(mlu ~ ses * gender, data=mlu.ses))
#4.18
interaction.plot(mlu.ses$gender,mlu.ses$ses,mlu.ses$mlu)
#4.18
interaction.plot(mlu.ses$gender,mlu.ses$ses,mlu.ses$mlu)
#4.19 Kruskal-Wallis test. Doesn't assume normalit but does assum
#that the groups come from similarly shaped distributions
kruskal.test(mlu~ses, data=mlu.ses)
#4.19 Kruskal-Wallis test. Doesn't assume normalit but does assum
#that the groups come from similarly shaped distributions
kruskal.test(mlu~ses, data=mlu.ses)
print(load(
url(’http://coltekin.net/cagri/R/data/newborn.rda’)
))
print(load( url('http://coltekin.net/cagri/R/data/newborn.rda')))
newborn
newbon.rate
newborn$rate
newborn$rate[20]
newborn$rate(20)
newborn$rate{20}
newborn$rate[20][13]
print(bilingual)
print('bilingual')
bilingual
bilingual = load(url(' http://coltekin.net/cagri/R/data/bilingual.txt'))
bilingual
bilingual = load(url('http://coltekin.net/cagri/R/data/bilingual.txt'))
bilingual
bilingual = read.delim((url('http://coltekin.net/cagri/R/data/bilingual.txt')))
bilingual
#5.2
summary(bilingual)
#5.2
summary.aov(bilingual)
help("factor")
#5.2
str(bilingual)
#5.2
str(bilingual)
bilingual$subj = factor(bilingual$subj)
bilingual$age = factor(bilingual$age, levels = c('preschool', 'firstgrade', 'secondgrade'))
str(bilingual)
#5.3
t.test(rate ~ language, data=newborn)
newborn
t.test(rate ~ language, data=newborn)
qnorm(newborn$langauge[newborn$langauge == 'native'])
qnorm(newborn$langauge[newborn$langauge == 'foreign'])
boxplot(rate ~ language, data = newborn)
qnorm(newborn$rate[newborn$langauge == 'native'])
qnorm(newborn$rate[newborn$langauge == 'foreign'])
qqnorm(newborn$rate[newborn$langauge == 'native'])
qqnorm(newborn$rate[newborn$langauge == 'foreign'])
qqnorm(newborn$rate[newborn$language == 'native'])
qqnorm(newborn$rate[newborn$language == 'foreign']
qqnorm(newborn$rate[newborn$language == 'native'])
newborn
qqnorm(newborn$rate[newborn$language == 'foreign'])
qqnorm(newborn$rate[newborn$language == 'native'])
t.test(rate ~ language, data=newborn)
t.test(rate ~ language, data=newborn, paired = T)
qqnorm(newborn$rate[newborn$language == 'native'] -
newborn$rate[newborn$language == 'foreign'])
qqnorm(newborn$rate[newborn$language == 'native'] -
newborn$rate[newborn$language == 'foreign'])
m = aov(rate ~ language + Error(participant/language), data = newborn)
summary(m)
n - lm(rate ~ language, data = newborn)
summary(n)
n = lm(rate ~ language, data = newborn)
summary(n)
t.test(rate ~ language, data=newborn)
summary(aov(rate ~ language, data = newborn))
bilingual
#5.8
summary(aov(mlu ~ age + Error(subj/age), data = bilingual))
2 + 2
#plotting a bell curve
x = seq(-4,4, by = .1)
plot(x, dnorm(x))
library(ggplot2)
library(lme4)
library(hydroGOF)
library(tidyr)
library(dplyr)
#setwd("~/Desktop/adjs!/kids-adjectives/experiments/1-kids-subjectivity/Submiterator-master")
#setwd("~/git/kids-adjectives/experiments/1-kids-subjectivity/Submiterator-master/")
num_round_dirs = 14
df = do.call(rbind, lapply(1:num_round_dirs, function(i) {
return (read.csv(paste(
'round', i, '/scopeTVJT.csv', sep='')) %>% #'round1/kids-subjectivity.csv')) %>% #for just 1
mutate(workerid = (workerid + (i-1)*9)))}))
d = subset(df, select=c("workerid","trial_num","response","condition", "language"))
unique(d$language)
length(unique(d$workerid))
head(d)
## remove non-English speakers
d = d[d$language!="Russian"&d$language!="",]
length(unique(d$workerid))
## determine number of observations
table(d$condition)
## calculate average response by condition (hopefully)
agg_resp = aggregate(response~condition,mean,
data=subset(d, trial_num %in% c('3','5','7','9') ))
library(ggplot2)
library(lme4)
library(hydroGOF)
library(tidyr)
library(dplyr)
num_round_dirs = 14
df = do.call(rbind, lapply(1:num_round_dirs, function(i) {
return (read.csv(paste(
'round', i, '/scopeTVJT.csv', sep='')) %>% #'round1/kids-subjectivity.csv')) %>% #for just 1
mutate(workerid = (workerid + (i-1)*9)))}))
d = subset(df, select=c("workerid","trial_num","response","condition", "language"))
unique(d$language)
length(unique(d$workerid))
head(d)
## remove non-English speakers
d = d[d$language!="Russian"&d$language!="",]
length(unique(d$workerid))
## determine number of observations
table(d$condition)
## calculate average response by condition (hopefully)
agg_resp = aggregate(response~condition,mean,
data=subset(d, trial_num %in% c('3','5','7','9') ))
d
num_round_dirs = 14
df = do.call(rbind, lapply(1:num_round_dirs, function(i) {
return (read.csv(paste(
'round', i, '/scopeTVJT.csv', sep='')) %>% #'round1/kids-subjectivity.csv')) %>% #for just 1
mutate(workerid = (workerid + (i-1)*9)))}))
d = subset(df, select=c("workerid","trial_num","response","condition", "language"))
unique(d$language)
setwd("~/Research/RSA Stuff/Experiments/MuLidz2003 Replication/kj_results")
num_round_dirs = 14
df = do.call(rbind, lapply(1:num_round_dirs, function(i) {
return (read.csv(paste(
'round', i, '/scopeTVJT.csv', sep='')) %>% #'round1/kids-subjectivity.csv')) %>% #for just 1
mutate(workerid = (workerid + (i-1)*9)))}))
d = subset(df, select=c("workerid","trial_num","response","condition", "language"))
unique(d$language)
q()
